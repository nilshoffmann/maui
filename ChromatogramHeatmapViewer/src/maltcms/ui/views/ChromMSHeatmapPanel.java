/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ChromMSHeatmapPanel.java
 *
 * Created on 25.02.2010, 17:18:49
 */
package maltcms.ui.views;

import cross.datastructures.fragments.IFileFragment;
import java.awt.BorderLayout;
import javax.swing.SwingUtilities;
import net.sf.maltcms.chromaui.charts.events.ChartPanelMouseListener;
import net.sf.maltcms.chromaui.charts.events.DomainMarkerKeyListener;
import net.sf.maltcms.chromaui.charts.ChartCustomizer;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.XYPlot;
import org.openide.util.Lookup;
import org.openide.util.lookup.AbstractLookup;
import org.openide.util.lookup.InstanceContent;

/**
 *
 * @author nilshoffmann
 */
public class ChromMSHeatmapPanel extends javax.swing.JPanel implements Lookup.Provider {

    private XYPlot ticplot;
    private ChartPanel cdxpanel;
    private DomainMarkerKeyListener dmkl;
    private InstanceContent ic = new InstanceContent();
    private Lookup lookup = new AbstractLookup(ic);

    /** Creates new form ChromMSHeatmapPanel */
    public ChromMSHeatmapPanel(IFileFragment f) {
        initComponents();
        ic.add(f);
        cdxpanel = new ChartPanel(null);
        ChartPanelMouseListener cpml = new ChartPanelMouseListener(cdxpanel);
        ic.add(cpml);
        cdxpanel.addChartMouseListener(cpml);
        add(cdxpanel, BorderLayout.CENTER);
        cdxpanel.requestFocus(true);
        cdxpanel.requestFocusInWindow();
        ic.add(cdxpanel);
    }

    public ChartPanelMouseListener getChartPanelMouseListener() {
        return lookup.lookup(ChartPanelMouseListener.class);
    }

    public IFileFragment getFileFragment() {
        return lookup.lookup(IFileFragment.class);
    }

    public void setPlot(final XYPlot plot) {
        this.ticplot = plot;
        Runnable r = new Runnable() {

            @Override
            public void run() {
                JFreeChart jfc = new JFreeChart(ticplot);
                ChartCustomizer.setSeriesColors(ticplot, 0.8f);
                ChartCustomizer.setSeriesStrokes(ticplot, 2.0f);
                cdxpanel.setChart(jfc);
                dmkl = new DomainMarkerKeyListener(
                        ticplot);
                dmkl.setPlot(ticplot);
                cdxpanel.addKeyListener(dmkl);
            }
        };
        SwingUtilities.invokeLater(r);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public Lookup getLookup() {
        return this.lookup;
    }
}
