/*
 * Maui, Maltcms User Interface. 
 * Copyright (C) 2008-2014, The authors of Maui. All rights reserved.
 *
 * Project website: http://maltcms.sf.net
 *
 * Maui may be used under the terms of either the
 *
 * GNU Lesser General Public License (LGPL)
 * http://www.gnu.org/licenses/lgpl.html
 *
 * or the
 *
 * Eclipse Public License (EPL)
 * http://www.eclipse.org/org/documents/epl-v10.php
 *
 * As a user/recipient of Maui, you may choose which license to receive the code 
 * under. Certain files or entire directories may not be covered by this 
 * dual license, but are subject to licenses compatible to both LGPL and EPL.
 * License exceptions are explicitly declared in all relevant files or in a 
 * LICENSE file in the relevant directories.
 *
 * Maui is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. Please consult the relevant license documentation
 * for details.
 */
package net.sf.maltcms.chromaui.jmztab.ui.project.panels;

import net.sf.maltcms.chromaui.project.spi.descriptors.mztab.containers.MzTabMetaDataContainer;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.Property;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;

/**
 *
 * @author Nils Hoffmann
 */
public class StudyDetailsPanel extends javax.swing.JPanel {

    Property studyIdProp, containerIdProp;
    AutoBinding studyIdBinding;
    Property studyNameProp, containerDisplayNameProp;
    AutoBinding studyNameBinding;
    Property studyDescrProp, containerDescrProp;
    AutoBinding studyDescrBinding;
    private MzTabMetaDataContainer mdc;

    /**
     * Creates new form StudyDetailsPanel
     */
    public StudyDetailsPanel(MzTabMetaDataContainer mdc) {
        initComponents();
        this.mdc = mdc;

        studyId.setText(mdc.getName());
        studyIdProp = BeanProperty.create("text");
        containerIdProp = BeanProperty.create("name");
        studyIdBinding = Bindings.createAutoBinding(UpdateStrategy.READ, studyId, studyIdProp, mdc, containerIdProp);

        studyName.setText(mdc.getDisplayName());
        studyNameProp = BeanProperty.create("text");
        containerDisplayNameProp = BeanProperty.create("displayName");
        studyNameBinding = Bindings.createAutoBinding(UpdateStrategy.READ,
                studyName, studyNameProp, mdc, containerDisplayNameProp);
        studyNameBinding.bind();

        descriptionTextArea.setText(mdc.getShortDescription());
        studyDescrProp = BeanProperty.create("text");
        containerDescrProp = BeanProperty.create("shortDescription");
        studyDescrBinding = Bindings.createAutoBinding(UpdateStrategy.READ, descriptionTextArea, studyDescrProp, mdc, containerDescrProp);
        studyDescrBinding.bind();

//        descriptionTextArea.setText(mdc.getShortDescription());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        studyNameLabel = new javax.swing.JLabel();
        studyName = new javax.swing.JTextField();
        descriptionLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        contactsList = new javax.swing.JList();
        contactsListLabel = new javax.swing.JLabel();
        addContact = new javax.swing.JButton();
        removeContact = new javax.swing.JButton();
        editContact = new javax.swing.JButton();
        studyIdLabel = new javax.swing.JLabel();
        studyId = new javax.swing.JTextField();

        org.openide.awt.Mnemonics.setLocalizedText(studyNameLabel, org.openide.util.NbBundle.getMessage(StudyDetailsPanel.class, "StudyDetailsPanel.studyNameLabel.text")); // NOI18N

        studyName.setText(org.openide.util.NbBundle.getMessage(StudyDetailsPanel.class, "StudyDetailsPanel.studyName.text")); // NOI18N
        studyName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studyNameActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(descriptionLabel, org.openide.util.NbBundle.getMessage(StudyDetailsPanel.class, "StudyDetailsPanel.descriptionLabel.text")); // NOI18N

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        descriptionTextArea.setText(org.openide.util.NbBundle.getMessage(StudyDetailsPanel.class, "StudyDetailsPanel.descriptionTextArea.text")); // NOI18N
        jScrollPane1.setViewportView(descriptionTextArea);

        contactsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(contactsList);

        org.openide.awt.Mnemonics.setLocalizedText(contactsListLabel, org.openide.util.NbBundle.getMessage(StudyDetailsPanel.class, "StudyDetailsPanel.contactsListLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(addContact, org.openide.util.NbBundle.getMessage(StudyDetailsPanel.class, "StudyDetailsPanel.addContact.text")); // NOI18N
        addContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addContactActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(removeContact, org.openide.util.NbBundle.getMessage(StudyDetailsPanel.class, "StudyDetailsPanel.removeContact.text")); // NOI18N
        removeContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeContactActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(editContact, org.openide.util.NbBundle.getMessage(StudyDetailsPanel.class, "StudyDetailsPanel.editContact.text")); // NOI18N
        editContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editContactActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(studyIdLabel, org.openide.util.NbBundle.getMessage(StudyDetailsPanel.class, "StudyDetailsPanel.studyIdLabel.text")); // NOI18N

        studyId.setText(org.openide.util.NbBundle.getMessage(StudyDetailsPanel.class, "StudyDetailsPanel.studyId.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studyNameLabel)
                    .addComponent(descriptionLabel)
                    .addComponent(contactsListLabel)
                    .addComponent(studyIdLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studyName)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(removeContact, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(addContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(studyId))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studyId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studyIdLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studyName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studyNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(contactsListLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addContact)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editContact)
                        .addGap(18, 18, 18)
                        .addComponent(removeContact))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(177, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void studyNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studyNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studyNameActionPerformed

    private void addContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addContactActionPerformed
//        ValidationPanel vp = new ValidationPanel();
        ContactPanel panel = new ContactPanel();
//        vp.setInnerComponent(panel);
//        panel.setupValidation(vp.getValidationGroup());
        NotifyDescriptor dd = new NotifyDescriptor.Confirmation(panel, "Add Contact", NotifyDescriptor.OK_CANCEL_OPTION);
        Object ret = DialogDisplayer.getDefault().notify(dd);
        if (DialogDescriptor.OK_OPTION.equals(ret)) {
            String cname = panel.getContactName();
            String caffiliation = panel.getContactAffiliation();
            String cemail = panel.getContactEmail();

//            Contact c = new Contact();
        } else {

        }
    }//GEN-LAST:event_addContactActionPerformed

    private void editContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editContactActionPerformed

    private void removeContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeContactActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addContact;
    private javax.swing.JList contactsList;
    private javax.swing.JLabel contactsListLabel;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JButton editContact;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton removeContact;
    private javax.swing.JTextField studyId;
    private javax.swing.JLabel studyIdLabel;
    private javax.swing.JTextField studyName;
    private javax.swing.JLabel studyNameLabel;
    // End of variables declaration//GEN-END:variables
}
